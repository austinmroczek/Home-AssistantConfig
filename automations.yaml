- id: atSunset
  alias: AtSunset
  initial_state: true
  trigger:
    platform: sun
    event: sunset
    offset: -00:00:00
  action:
    service: scene.turn_on
    entity_id: scene.AtSunset
- id: hourBeforeSunset
  alias: HourBeforeSunset
  initial_state: true
  trigger:
    platform: sun
    event: sunset
    offset: -01:00:00
  action:
    service: scene.turn_on
    entity_id: scene.hour_before_sunset
- id: atSunrise
  alias: AtSunrise
  initial_state: true
  trigger:
    platform: sun
    event: sunrise
    offset: -00:00:00
  action:
    service: scene.turn_on
    entity_id: scene.AtSunrise
- id: StartWaterHeater0600
  alias: Start water heater
  initial_state: true
  trigger:
    platform: time
    at: 06:00:00
  action:
    service: switch.turn_on
    entity_id: switch.water_heater_outlet
- id: StopWaterHeater0700
  alias: Stop water heater
  initial_state: true
  trigger:
    platform: time
    at: 07:00:00
  action:
    service: switch.turn_off
    entity_id: switch.water_heater_outlet
- id: MasterBathMotionEnds
  alias: Master bath motion ends
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.master_bath_toilet_motion
    to: 'off'
  action:
  - service: timer.start
    entity_id: timer.water_heater
- id: MasterBathMotionStarts
  alias: Master bath motion starts
  initial_state: true
  trigger:
    platform: state
    entity_id: binary_sensor.master_bath_toilet_motion
    to: 'on'
  action:
  - service: timer.cancel
    entity_id: timer.water_heater
  - service: switch.turn_on
    entity_id: switch.water_heater_outlet
- id: WaterHeaterTimerEnds
  alias: Water Heater timer ends
  initial_state: true
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.water_heater
  action:
    service: switch.turn_off
    entity_id: switch.water_heater_outlet
- id: '1587841836008'
  alias: Laundry flood
  description: If the laundry floods, announce it on Sonos.
  trigger:
  - entity_id: sensor.laundry_flood
    platform: state
    to: '2'
  - entity_id: sensor.laundry_flood
    platform: state
    to: '1'
  condition: []
  action:
  - data:
      delay: 00:00:03
      message: The laundry area is flooded in the master bathroom.
      sonos_entity: media_player.sonos_master_bedroom
      volume: 0.5
    service: script.sonos_say
  - delay: '7'
  - data:
      delay: 00:00:03
      message: The laundry area is flooded in the master bathroom.
      sonos_entity: media_player.sonos_living_room
      volume: 0.5
    service: script.sonos_say
- id: ClimateAirEnabled
  alias: Climate Air Enabled
  description: Turn on air conditioner and close the skylight when Enable Air is turned
    on.
  trigger:
  - entity_id: input_boolean.enable_climate_air
    platform: state
    to: 'on'
  action:
  - entity_id: input_boolean.enable_climate_heat
    service: homeassistant.turn_off
  - data:
      entity_id: climate.central
      hvac_mode: heat_cool
    service: climate.set_hvac_mode
  - data:
      entity_id: climate.central
      fan_mode: auto
    service: climate.set_fan_mode
  - data: {}
    entity_id: cover.master_bath_skylight_switch
    service: cover.close_cover
  initial_state: true
- id: ClimateAirDisabled
  alias: Climate Air Disabled
  initial_state: true
  trigger:
    platform: state
    entity_id: input_boolean.enable_climate_air
    to: 'off'
  action:
  - service: climate.set_hvac_mode
    data:
      entity_id: climate.central
      hvac_mode: 'off'
- id: ClimateHeatEnabled
  alias: Climate Heat Enabled
  trigger:
  - entity_id: input_boolean.enable_climate_heat
    platform: state
    to: 'on'
  action:
  - entity_id: input_boolean.enable_climate_air
    service: homeassistant.turn_off
  - data:
      entity_id: climate.central
      hvac_mode: heat_cool
    service: climate.set_hvac_mode
  - data:
      entity_id: climate.central
      fan_mode: auto
    service: climate.set_fan_mode
  initial_state: true
- id: ClimateHeatDisabled
  alias: Climate Heat Disabled
  initial_state: true
  trigger:
    platform: state
    entity_id: input_boolean.enable_climate_heat
    to: 'off'
  action:
  - service: climate.set_hvac_mode
    data:
      entity_id: climate.central
      hvac_mode: 'off'
- id: Climate_1600
  alias: Climate 0600
  trigger:
  - at: 06:00:00
    platform: time
  action:
  - data:
      entity_id: climate.central
      target_temp_high: 77
      target_temp_low: 68
    service: climate.set_temperature
  initial_state: true
- id: Climate_2000
  alias: Climate 2000
  trigger:
  - at: '20:00:00'
    platform: time
  action:
  - data:
      entity_id: climate.central
      target_temp_high: 76
      target_temp_low: 62
    service: climate.set_temperature
  initial_state: true
- id: Weekday_Internet
  alias: Weekday Internet
  initial_state: true
  trigger:
    platform: time
    at: 08:15:00
  action:
    service: homeassistant.turn_on
    entity_id: group.internet
  condition:
    condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
- id: Weekend_Internet
  alias: Weekend Internet
  initial_state: true
  trigger:
    platform: time
    at: 06:30:00
  action:
    service: homeassistant.turn_on
    entity_id: group.internet
  condition:
    condition: time
    weekday:
    - sat
    - sun
- id: AtMidnight
  alias: AtMidnight
  initial_state: true
  trigger:
    platform: time
    at: 00:00:00
  action:
    service: scene.turn_on
    entity_id: scene.AtMidnight
- id: At0630
  alias: At0630
  trigger:
  - at: 06:30:00
    platform: time
  action:
  - entity_id: scene.At0630
    service: scene.turn_on
  - data:
      fan_mode: Auto Low
    entity_id: climate.central
    service: climate.set_fan_mode
  initial_state: true
- id: At0800
  alias: At0800
  initial_state: true
  trigger:
    platform: time
    at: 08:00:00
  action:
    service: scene.turn_on
    entity_id: scene.At0800
- id: At1000
  alias: At1000
  initial_state: true
  trigger:
    platform: time
    at: '10:00:00'
  action:
    service: scene.turn_on
    entity_id: scene.At1000
- id: At1300
  alias: At1300
  initial_state: true
  trigger:
    platform: time
    at: '13:00:00'
  action:
    service: scene.turn_on
    entity_id: scene.At1300
- id: At1500
  alias: At1500
  initial_state: true
  trigger:
    platform: time
    at: '15:00:00'
  action:
    service: scene.turn_on
    entity_id: scene.At1500
- id: At1700
  alias: At1700
  initial_state: true
  trigger:
    platform: time
    at: '17:00:00'
  action:
    service: scene.turn_on
    entity_id: scene.At1700
- id: AtNoon
  alias: AtNoon
  initial_state: true
  trigger:
    platform: time
    at: '12:00:00'
  action:
    service: scene.turn_on
    entity_id: scene.AtNoon
- id: At4PM
  alias: At4PM
  initial_state: true
  trigger:
    platform: time
    at: '16:00:00'
  action:
    service: scene.turn_on
    entity_id: scene.At4PM
- id: At8PM
  alias: At8PM
  initial_state: true
  trigger:
    platform: time
    at: '20:00:00'
  action:
    service: scene.turn_on
    entity_id: scene.At8PM
- id: At9PM
  alias: At9PM
  initial_state: true
  trigger:
    platform: time
    at: '21:00:00'
  action:
    service: scene.turn_on
    entity_id: scene.At9PM
- id: AlarmDisarmedDaytime
  alias: 'Alarm: Disarmed Daytime'
  initial_state: true
  trigger:
    platform: state
    entity_id: alarm_control_panel.home1
    to: disarmed
  condition:
    condition: sun
    before: sunset
  action:
  - delay: 90
  - service: scene.turn_on
    entity_id: scene.OnDisarmedDaytime
- id: AlarmDisarmedNighttime
  alias: 'Alarm: Disarmed Nighttime'
  initial_state: true
  trigger:
    platform: state
    entity_id: alarm_control_panel.home1
    to: disarmed
  condition:
    condition: sun
    after: sunset
  action:
    service: scene.turn_on
    entity_id: scene.OnDisarmedNighttime
- id: AlarmArmedAway
  alias: 'Alarm: Armed Away'
  initial_state: true
  trigger:
    platform: state
    entity_id: alarm_control_panel.home1
    to: armed_away
  action:
  - service: homeassistant.turn_off
    entity_id: group.house_media_players
  - delay: 120
  - service: scene.turn_on
    entity_id: scene.OnArmedAway
  - service: lock.lock
    data:
      entity_id: lock.kitchen_door_lock
- id: AlarmArmedStayDaytime
  alias: 'Alarm: Armed Stay Daytime'
  initial_state: true
  trigger:
    platform: state
    entity_id: alarm_control_panel.home1
    to: armed_home
  condition:
    condition: sun
    before: sunset
  action:
  - delay: 120
  - service: scene.turn_on
    entity_id: scene.OnArmedStayDaytime
  - service: lock.lock
    data:
      entity_id: lock.kitchen_door_lock
- id: AlarmTriggered
  alias: 'Alarm: Triggered'
  initial_state: true
  trigger:
    platform: state
    entity_id: alarm_control_panel.home1
    to: triggered
  action:
  - service: scene.turn_on
    entity_id: scene.OnAlarmTriggered
  - service: lock.unlock
    data:
      entity_id: lock.kitchen_door_lock
  - service: notify.austin
    data_template:
      message: '{% set alarm_source = states[''alarm_control_panel.home1''].attributes.triggered_source
        %} {% set alarm_zone = states[''alarm_control_panel.home1''].attributes.triggered_zone
        %} {% set alarm_ac_loss = states[''alarm_control_panel.home1''].attributes.ac_loss
        %} {% set alarm_low_battery = states[''alarm_control_panel.home1''].attributes.low_battery
        %}

        The alarm has been triggered! Source: {{ alarm_source }} Zone: {{ alarm_zone
        }} AC Loss: {{ alarm_ac_loss }} Low Battery: {{ alarm_low_battery }}'
      title: Goldsmith Alarm Triggered!
- id: RainDelayManuallyTriggered
  alias: Rain Delay manually triggered
  initial_state: true
  trigger:
    platform: state
    entity_id: input_boolean.rain_delay
    to: 'on'
  action:
  - service: timer.start
    entity_id: timer.rain_delay
- id: RainDelayTimerEnds
  alias: Rain Delay timer ends
  initial_state: true
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.rain_delay
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.rain_delay
- id: RainDelayTurnsOnWhenSkylightSensesRain
  alias: Rain Delay turns on when skylight senses rain
  initial_state: true
  trigger:
    platform: template
    value_template: '{% if is_state(''sensor.master_bath_skylight_flood'', ''1'')
      %}true{% endif %}'
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.rain_delay
